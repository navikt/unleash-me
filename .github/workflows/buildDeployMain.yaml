name: "Build"

on:
  push:
    branches:
      - main

jobs:
  build:
    permissions:
      packages: write
      contents: read
      id-token: write
    name: Build and publish docker container
    runs-on: ubuntu-latest
    outputs:
      image: "${{ steps.set-outputs.outputs.IMAGE }}"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Set version
        id: version
        shell: bash
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=12 HEAD)
          echo "TIME=$TIME" >> $GITHUB_OUTPUT
          echo "VERSION=$TIME-$COMMIT" >> $GITHUB_OUTPUT

      - name: NAIS login
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: nais/login@v0
        id: login
        with:
          team: pensjon-saksbehandling

      - name: Docker meta
        if: ${{ github.actor != 'dependabot[bot]' }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login.outputs.registry }}/${{ github.repository }}/${{ github.repository_owner}}
          tags: |
            type=sha,prefix=${{ steps.version.outputs.time }}-,priority=9002

      - name: Build and push
        if: ${{ github.actor != 'dependabot[bot]' }}
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Set outputs
        if: ${{ github.actor != 'dependabot[bot]' }}
        shell: bash
        id: set-outputs
        run: |
          echo "IMAGE=${{ fromJSON(steps.meta.outputs.json).tags[0] }}" >> $GITHUB_OUTPUT

  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    if: github.ref == 'refs/heads/main'
    needs: build
    name: Deploy unleash-me
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - vars: .nais/pensjon-saksbehandling-dev.yaml
            cluster: dev-gcp
            team: pensjon-saksbehandling
#          - vars: .nais/pensjon-saksbehandling-prod.yaml
#            cluster: prod-gcp
#            team: pensjon-saksbehandling
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        name: "Deploy to cluster ${{ matrix.cluster }} for team ${{ matrix.team }}"
        env:
          IMAGE: "${{ needs.build.outputs.image }}"
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: .nais/nais.yaml
          VARS: ${{ matrix.vars }}
          TEAM: ${{ matrix.team }}
